From: Mathieu Trudel-Lapierre <mathieu.trudel-lapierre@canonical.com>
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/ofono/+bug/691450
Forwarded: not-needed
Subject: Don't handle signal stacktraces internally

We short-circuit the internal handling of signals to allow them being caught
by Apport running on a system. Since there won't always been useful debug
symbols installed for all layers of the stack, it makes sense to do so anyway.

Index: ofono-0.41/src/log.c
===================================================================
--- ofono-0.41.orig/src/log.c	2011-02-10 21:40:04.773465492 -0500
+++ ofono-0.41/src/log.c	2011-02-10 21:40:54.293517673 -0500
@@ -107,49 +107,6 @@
 	va_end(ap);
 }
 
-static void signal_handler(int signo)
-{
-	void *frames[64];
-	char **symbols;
-	size_t n_ptrs;
-	unsigned int i;
-
-	n_ptrs = backtrace(frames, G_N_ELEMENTS(frames));
-	symbols = backtrace_symbols(frames, n_ptrs);
-	if (symbols == NULL) {
-		ofono_error("No backtrace symbols");
-		exit(1);
-	}
-
-	ofono_error("Aborting (signal %d)", signo);
-	ofono_error("++++++++ backtrace ++++++++");
-
-	for (i = 1; i < n_ptrs; i++)
-		ofono_error("[%d]: %s", i - 1, symbols[i]);
-
-	ofono_error("+++++++++++++++++++++++++++");
-
-	g_free(symbols);
-	exit(1);
-}
-
-static void signal_setup(sighandler_t handler)
-{
-	struct sigaction sa;
-	sigset_t mask;
-
-	sigemptyset(&mask);
-	sa.sa_handler = handler;
-	sa.sa_mask = mask;
-	sa.sa_flags = 0;
-	sigaction(SIGBUS, &sa, NULL);
-	sigaction(SIGILL, &sa, NULL);
-	sigaction(SIGFPE, &sa, NULL);
-	sigaction(SIGSEGV, &sa, NULL);
-	sigaction(SIGABRT, &sa, NULL);
-	sigaction(SIGPIPE, &sa, NULL);
-}
-
 extern struct ofono_debug_desc __start___debug[];
 extern struct ofono_debug_desc __stop___debug[];
 
@@ -199,8 +156,6 @@
 	if (detach == FALSE)
 		option |= LOG_PERROR;
 
-	signal_setup(signal_handler);
-
 	openlog("ofonod", option, LOG_DAEMON);
 
 	syslog(LOG_INFO, "oFono version %s", VERSION);
@@ -214,7 +169,5 @@
 
 	closelog();
 
-	signal_setup(SIG_DFL);
-
 	g_strfreev(enabled);
 }
