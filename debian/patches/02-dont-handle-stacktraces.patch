From: Mathieu Trudel-Lapierre <mathieu.trudel-lapierre@canonical.com>
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/ofono/+bug/691450
Forwarded: not-needed
Subject: Don't handle signal stacktraces internally

We short-circuit the internal handling of signals to allow them being caught
by Apport running on a system. Since there won't always been useful debug
symbols installed for all layers of the stack, it makes sense to do so anyway.

---
 src/log.c |   30 ------------------------------
 1 file changed, 30 deletions(-)

Index: b/src/log.c
===================================================================
--- a/src/log.c
+++ b/src/log.c
@@ -215,32 +215,6 @@ static void print_backtrace(unsigned int
 	close(infd[0]);
 }
 
-static void signal_handler(int signo)
-{
-	ofono_error("Aborting (signal %d) [%s]", signo, program_exec);
-
-	print_backtrace(2);
-
-	exit(EXIT_FAILURE);
-}
-
-static void signal_setup(sighandler_t handler)
-{
-	struct sigaction sa;
-	sigset_t mask;
-
-	sigemptyset(&mask);
-	sa.sa_handler = handler;
-	sa.sa_mask = mask;
-	sa.sa_flags = 0;
-	sigaction(SIGBUS, &sa, NULL);
-	sigaction(SIGILL, &sa, NULL);
-	sigaction(SIGFPE, &sa, NULL);
-	sigaction(SIGSEGV, &sa, NULL);
-	sigaction(SIGABRT, &sa, NULL);
-	sigaction(SIGPIPE, &sa, NULL);
-}
-
 extern struct ofono_debug_desc __start___debug[];
 extern struct ofono_debug_desc __stop___debug[];
 
@@ -305,8 +279,6 @@ int __ofono_log_init(const char *program
 	if (detach == FALSE)
 		option |= LOG_PERROR;
 
-	signal_setup(signal_handler);
-
 	openlog(basename(program), option, LOG_DAEMON);
 
 	syslog(LOG_INFO, "oFono version %s", VERSION);
@@ -320,7 +292,5 @@ void __ofono_log_cleanup(void)
 
 	closelog();
 
-	signal_setup(SIG_DFL);
-
 	g_strfreev(enabled);
 }
