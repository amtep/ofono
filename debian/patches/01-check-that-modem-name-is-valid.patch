Check that modem name is valid otherwise fallback to using type

From: Kalle Valo <kalle.valo@canonical.com>

Some Huawei modems (this one is from Huawei E620) have garbage as serial data:

E: ID_SERIAL=ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ_HUAWEI_Mobile_ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ
E: ID_SERIAL_SHORT=ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ
E: ID_BUS=usb
E: ID_USB_INTERFACES=:ffffff:080650:
E: ID_VENDOR_FROM_DATABASE=Huawei Technologies Co., Ltd.
E: ID_MODEL_FROM_DATABASE=E620 USB Modem

Huawei plugin uses serial as the name for the modem. But because the
garbage is not a valid path name, modem creation fails.

Fix it by falling back to using type if the check for name fails.
---
 src/modem.c |   13 ++++++++++---
 1 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/src/modem.c b/src/modem.c
index f89d609..70df159 100644
--- a/src/modem.c
+++ b/src/modem.c
@@ -1267,6 +1267,7 @@ void ofono_modem_set_name(struct ofono_modem *modem, const char *name)
 struct ofono_modem *ofono_modem_create(const char *name, const char *type)
 {
 	struct ofono_modem *modem;
+	gboolean use_name;
 	char path[128];
 
 	DBG("name: %s, type: %s", name, type);
@@ -1277,10 +1278,16 @@ struct ofono_modem *ofono_modem_create(const char *name, const char *type)
 	if (name && strlen(name) > 64)
 		return NULL;
 
-	if (name == NULL)
-		snprintf(path, sizeof(path), "/%s%d", type, next_modem_id);
-	else
+	if (name != NULL) {
 		snprintf(path, sizeof(path), "/%s", name);
+		use_name = __ofono_dbus_valid_object_path(path);
+	} else
+		use_name = FALSE;
+
+	if (use_name)
+		snprintf(path, sizeof(path), "/%s", name);
+	else
+		snprintf(path, sizeof(path), "/%s%d", type, next_modem_id);
 
 	if (__ofono_dbus_valid_object_path(path) == FALSE)
 		return NULL;
